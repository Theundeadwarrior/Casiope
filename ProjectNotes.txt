Look into SceneGraph and why they are bad!!
http://gamedev.stackexchange.com/questions/8278/what-should-be-contained-in-a-game-scene-graph/8281#8281


// Look into the CompileShader we had on our project... it might have some good things to learn from.

That's where we generate the shader variations:
	https://github.com/Theundeadwarrior/LudumDare29/blob/master/source/GameEngine/TestSceneLoader.cpp

That's where the call to bind the local params is done:
	https://github.com/Theundeadwarrior/LudumDare29/blob/master/source/LowLevelGraphics/LowLevelAPI/GPUAPI/LowLevelGPUAPI.cpp

That's where we actually bind the parameters
	https://github.com/Theundeadwarrior/LudumDare29/blob/master/source/SceneManager/Material/Material.cpp


// ResourceManager:
//------------------------------
ResourceManager should be responsible for requesting load on the disk. It should manage dependencies.

Maybe we can have a BaseObject that has an Id and a TypeId.
We can have a file that describes the dependencies in between objects so we know in advance what dependencies we have before loading the objects.
We can load all the objects needed in an area and patch the pointers using that table.

A model might have multiple meshes and textures.

**Investigate if we want to do Render Passes where the depth prepass would be one of them as well as the light accumulation and the grid comp.

******* We need to update the Light.ViewCoordPosition before submitting the buffer to the shader...